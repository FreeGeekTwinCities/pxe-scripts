#!/bin/bash

# Based on print-specs, looks for an HDT dump file in /tftpboot/blanks, and
# if it finds one, deletes the dump file and prints a blank spec sheet PDF.
# Some machines won't work with HDT, so this allows a technician
# to print an empty form and fill it in by hand.
# Peter Scheie, Free Geek Twin Cities
# v1 20151331   Initial attempt.


## Set some globals
LOG='/var/log/print-blanks.log'

#### Utility Functions ####

OK()
{
    echo -e "OK $1" $LOG
}

ERROR()
{
    now=$(date '+%Y-%m-%d %H:%M:%S')
    printf "$now ERROR: $1 \n" >> $LOG
}

INFO()
{
    now=$(date '+%Y-%m-%d %H:%M:%S')
    printf "$now $1\n" >> $LOG
}

HELP()
{
    msg="
NAME
    print-specs

DESCRIPTION
    Prints blank spec sheet forms for laptop or desktop based on whether output
    from HDT is directed to /tftpboot/blanks/laptop or /tftpboot/blanks/desktop,
    which in turn is controlled by selection on the PXE menu.

OPTIONS
    -h  Help.  Print this screen.
"
    echo "$msg"
    exit
}

#### Functions, Defined alphabetically

ProcessDumpFiles()
{
    pctype=$1
    list=($(ls /tftpboot/blanks/$pctype/))
    if [ -z "$list" ]; then
        return
    else
        ## Move any found files right away so the next run of print-specs 
        ## doesn't start working on our files too.
        pattern='[0-9a-f][0-9a-f]-[0-9a-f][0-9a-f]-[0-9a-f][0-9a-f]-[0-9a-f][0-9a-f]-[0-9a-f][0-9a-f]-[0-9a-f][0-9a-f]'
		for file in ${list[@]}; do
            if [[ "$file" = ${pattern}* ]]; then
                rm /tftpboot/blanks/$pctype/$file
            fi
        done
        
		for file in ${list[@]}; do
	        PrintPdf $pctype
        done
    fi
}

PrintPdf() 
{
    local pctype=$1
    lpr -P intake /tftpboot/blanks/${pctype}-specsheet-blank.pdf
}

#### End of functions ####

## Handle command line arguments ##
while getopts ":v" opt; do
    case $opt in
        v) LOG='| tee -a /var/log/print-specs.log' ;;
        *) HELP ;;
    esac
done

### Do the work ###
ProcessDumpFiles intake
ProcessDumpFiles laptop
ProcessDumpFiles postbuild
